// <auto-generated />
using System;
using GeoMapDownloader;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace GeoMapDownloader.Migrations
{
    [DbContext(typeof(TilesDbContext))]
    [Migration("20190601154041_First")]
    partial class First
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.4-servicing-10062");

            modelBuilder.Entity("GeoMapDownloader.CacheUrl", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Action");

                    b.Property<byte[]>("Data");

                    b.Property<string>("Mime");

                    b.Property<string>("Url");

                    b.Property<string>("_Headers")
                        .HasColumnName("_Headers");

                    b.HasKey("Id");

                    b.ToTable("CacheUrl");
                });

            modelBuilder.Entity("GeoMapDownloader.Tiles", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CacheTime");

                    b.Property<long?>("DataId");

                    b.Property<string>("Hash");

                    b.Property<int>("Type");

                    b.Property<long>("X");

                    b.Property<long>("Y");

                    b.Property<long>("Zoom");

                    b.HasKey("Id");

                    b.HasIndex("DataId");

                    b.HasIndex("Hash")
                        .HasName("IndexOfHash");

                    b.HasIndex("X", "Y", "Zoom", "Type")
                        .HasName("IndexOfTiles");

                    b.ToTable("Tiles");
                });

            modelBuilder.Entity("GeoMapDownloader.TilesData", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<byte[]>("Tile");

                    b.HasKey("Id");

                    b.ToTable("TilesData");
                });

            modelBuilder.Entity("GeoMapDownloader.Tiles", b =>
                {
                    b.HasOne("GeoMapDownloader.TilesData", "TilesData")
                        .WithMany("Tiles")
                        .HasForeignKey("DataId");
                });
#pragma warning restore 612, 618
        }
    }
}
